version: "3.9"

services:
  db:
    image: postgres:16
    container_name: app_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: America/Lima
    # ⛔ En prod, NO expongas el puerto de la DB al host
    # ports:
    #   - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-net

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_backend
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      JAVA_OPTS: ${JAVA_OPTS}
      SPRING_MAIL_HOST: ${SPRING_MAIL_HOST}
      SPRING_MAIL_PORT: ${SPRING_MAIL_PORT}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      # --- Redis (Spring Boot las lee directamente) ---
      SPRING_DATA_REDIS_HOST: ${REDIS_HOST}
      SPRING_DATA_REDIS_PORT: ${REDIS_PORT}
      SPRING_DATA_REDIS_PASSWORD: ${REDIS_PASSWORD}

    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "${APP_PORT}:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/actuator/health | grep -q '\"status\":\"UP\"'"]
      interval: 30s
      timeout: 5s
      retries: 5
    networks:
      - app-net

  # Opcional (útil para ops). Evita en prod abierto.
#  pgadmin:
#    image: dpage/pgadmin4:8
#    container_name: app_pgadmin
#    restart: unless-stopped
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
#      TZ: America/Lima
#    # ⛔ En prod, evita exponer hacia el host
#    ports:
#       - "${PGADMIN_PORT}:80"
#    depends_on:
#      db:
#        condition: service_healthy
#    networks:
#      - app-net
  redis:
    image: redis:7-alpine
    container_name: app_redis
    restart: unless-stopped
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    # ⛔ En prod, evita exponer al host. Si lo necesitas localmente, descomenta:
    # ports:
    #   - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli -a ${REDIS_PASSWORD} ping | grep PONG" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-net


volumes:
  db_data:

networks:
  app-net:
    driver: bridge
